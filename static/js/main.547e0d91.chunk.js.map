{"version":3,"sources":["logo.svg","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","task","setTask","tasks","setTasks","useEffect","localStorage","getItem","storedList","JSON","parse","className","name","type","value","placeholder","onChange","e","target","onClick","newTask","id","Date","getTime","toString","title","setItem","stringify","length","map","Fragment","style","textAlign","fontWeight","deleted","filter","t","handleDelete","removeItem","App","background","backgroundSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,I,0BCEA,SAASA,IAAQ,IAAD,EACLC,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEHF,mBAAS,IAFN,mBAEtBG,EAFsB,KAEfC,EAFe,KAI7BC,qBAAU,WACN,GAAGC,aAAaC,QAAQ,cAAc,CAClC,IAAMC,EAAaC,KAAKC,MAAMJ,aAAaC,QAAQ,eACnDH,EAASI,MAEf,IAqBF,OACE,sBAAKG,UAAU,gBAAf,UACE,oBAAIA,UAAU,kBAAd,uBACA,qBAAKA,UAAU,QAAf,SACE,uBACEC,KAAK,OACLC,KAAK,OACLC,MAAOb,EACPc,YAAY,qBACZJ,UAAU,eACVK,SAAU,SAACC,GAAD,OAAOf,EAAQe,EAAEC,OAAOJ,YAGtC,qBAAKH,UAAU,QAAf,SACE,wBACEA,UAAU,8CACVQ,QAnCQ,SAACF,GACf,GAAIhB,EAAM,CACR,IAAMmB,EAAU,CAAEC,IAAI,IAAIC,MAAOC,UAAUC,WAAYC,MAAOxB,GAC9DG,EAAS,GAAD,mBAAKD,GAAL,CAAYiB,KACpBd,aAAaoB,QAAQ,aAAcjB,KAAKkB,UAAL,sBAAmBxB,GAAnB,CAA0BiB,MAC7DlB,EAAQ,MA4BN,mBAOF,sBAAKS,UAAU,QAAf,qBAEIR,EAAMyB,OAEa,IAAjBzB,EAAMyB,OACN,UACAzB,EAAMyB,OAAS,EAAf,WACIzB,EAAMyB,OADV,UAEA,KALA,eAOLzB,EAAM0B,KAAI,SAAC5B,GAAD,OACT,eAAC,IAAM6B,SAAP,WACI,qBAAKnB,UAAU,SAAf,SACI,sBAAMA,UAAY,iCAClBoB,MAAO,CAACC,UAAW,OAAQC,WAAY,QADvC,SAEKhC,EAAKwB,UAId,qBAAKd,UAAU,QAAf,SACI,wBACAA,UAAW,uCACXQ,QAAU,kBArDH,SAAClB,GAClB,IAAMiC,EAAU/B,EAAMgC,QAAO,SAACC,GAAD,OAAKA,EAAEf,KAAOpB,EAAKoB,MAChDjB,EAAS8B,GACT5B,aAAaoB,QAAQ,aAAcjB,KAAKkB,UAAUO,IAkDzBG,CAAapC,IAF5B,wBATaA,EAAKoB,OAgB1BlB,EAAMyB,OACJ,8BACI,wBAAQjB,UAAW,+BAA+BQ,QAAS,kBArDnEf,EAAS,SACTE,aAAagC,WAAW,eAoDhB,qBAFS,QC9DRC,MAdf,WACE,OACE,qBAAK5B,UAAU,+CACfoB,MAAO,CACLS,WAAW,kDACXC,eAAgB,SAHlB,SAME,cAAC1C,EAAD,OCAS2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.547e0d91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\n\nexport default function Todo() {\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(()=>{\n      if(localStorage.getItem(\"localTasks\")){\n          const storedList = JSON.parse(localStorage.getItem(\"localTasks\"));\n          setTasks(storedList);\n      }\n  },[])\n\n  const addTask = (e) => {\n    if (task) {\n      const newTask = { id: new Date().getTime().toString(), title: task };\n      setTasks([...tasks, newTask]);\n      localStorage.setItem(\"localTasks\", JSON.stringify([...tasks, newTask]));\n      setTask(\"\");\n    }\n  };\n\n  const handleDelete = (task)=>{\n      const deleted = tasks.filter((t)=>t.id !== task.id);\n      setTasks(deleted);\n      localStorage.setItem(\"localTasks\", JSON.stringify(deleted))\n  }\n\n  const handleClear=()=>{\n      setTasks([]);\n      localStorage.removeItem(\"localTasks\");\n  }\n  return (\n    <div className=\"container row\">\n      <h1 className=\"mt-3 text-white\">To-Do App</h1>\n      <div className=\"col-8\">\n        <input\n          name=\"task\"\n          type=\"text\"\n          value={task}\n          placeholder=\"Write your task...\"\n          className=\"form-control\"\n          onChange={(e) => setTask(e.target.value)}\n        />\n      </div>\n      <div className=\"col-4\">\n        <button\n          className=\"btn btn-primary form-control material-icons\"\n          onClick={addTask}\n        >\n          add\n        </button>\n      </div>\n      <div className=\"badge\">\n        You have\n        {!tasks.length\n          ? \" no tasks\"\n          : tasks.length === 1\n          ? \" 1 task\"\n          : tasks.length > 1\n          ? ` ${tasks.length} tasks`\n          : null}\n      </div>\n      {tasks.map((task) => (\n        <React.Fragment key={task.id}>\n            <div className=\"col-11\">\n                <span className = \"form-control bg-white btn mt-2\"\n                style={{textAlign: \"left\", fontWeight: \"bold\"}}>\n                    {task.title}\n                </span>\n            </div>\n\n            <div className=\"col-1\">\n                <button\n                className =\" mt-2 btn btn-warning material-icons\"\n                onClick ={()=> handleDelete(task)}\n                >delete</button>\n            </div>\n        </React.Fragment>\n      ))}\n      {!tasks.length ? null:(\n          <div>\n              <button className= \"btn btn-secondary  mt-4 mb-4\" onClick={()=>handleClear()}>\n                  Clear\n              </button>\n          </div>\n      )}\n    </div>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Todo from './components/todo';\n\nfunction App() {\n  return (\n    <div className='container border border-primary rounded mt-5'\n    style={{\n      background: `url(https://wallpapercave.com/wp/wp7422936.jpg)`,\n      backgroundSize: 'cover'\n    }}\n    >\n      <Todo/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}